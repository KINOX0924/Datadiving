5월 21일 MySQL 강의

- order by 정렬 명령어 사용 시 Null 값이 있다면 Null 값은 계산이 안되기 때문에 맨 처음에 나오게 됨
* 일반적으로 작성 시에는 order by 가 Null 값을 기본값으로 바꾸는 것보다 먼저 처리 되기 때문에 ifnull 을 사용하여 기본값을 오름차순의 가장 큰 값으로하더라도 정렬이 되지 않음
예:)) select player_name , ifnull(join_yyyy,2025) , posit , back_no from player where TEAM_ID = 'K01' order by join_yyyy , player_name;
* 상기 예시와 같은 경우 정렬이 먼저 진행되고 , 조건절이 실행되고 , 조회가 되기 때문에 이미 정렬 후에 null 값에 기본값이 들어가도 올바른 정렬이 되지 않음
* 그래서 Null 값을 처리하고 싶은 경우 다음과 같은 순서로 처리 필요함
예:)) select * from (select player_name , ifnull(join_yyyy , 2025) join_yyyy , posit , back_no from player where TEAM_ID = 'K01') as AA order by join_yyyy , player_name;

- order by 정렬에서 Null 값만 뒤로 빼거나 앞으로 빼고 싶을 때 [ asc = Null 값을 뒤로 , desc = Null 값을 앞으로 ]
예:)) select player_name , join_yyyy , posit from player where team_id = 'K01' order by join_yyyy is null asc , join_yyyy asc , player_name;

- union 과 union all 의 부분 집합에는 order by 가 적용되지만 최종 결과 집합에는 순서의 정렬을 보장하지 않음


select 절에서 사용하는 서브 쿼리를 '스칼라 서브 쿼리' 만 가능
* 스칼라 서브 쿼리란 쿼리의 실행 결과가 값 딱 하나인 것
예:)) select A.player_name , (select team_name from team where team_id = A.team_id) team_name from player A where A.team_id in ('K01' , 'K03');


자동 증가 , auto_increment
Oracle 은 가능하고 MySQL 에서는 불가능한 자동 증가 쿼리
- insert into test(id , title) values((select max(id) + 1) from test , "title");


MySQL 쿼리 조건문 (case 문)
기본 구조
case (필드명) when (조건/값) then (반환값) else (반환값) end;
case (필드명) when (조건/값) then (반환값) when (조건/값) then (반환값) when (조건/값) then (반환값) else (반환값) end;
- 필드명을 지정해준 경우

case when (조건식) then (반환값) else (반환값) end;
- 필드명을 지정하지 않는 경우

* when 뒤에 조건(값) 을 넣을때는 case 에 필드명을 지정해주어야 하고, when 뒤에 조건'식' 을 넣을 때는 case 에 필드명을 지정하지 않음

예:)) select A.player_name ,
      case posit
        when 'GF' then '골키퍼'
        when 'DF' then '수비수'
        when 'FW' then '공격수'
        when 'MF' then '미드필더'
        else '미정'
      end as posit
      from player A
      where team_id = 'K01';

데이터 관련 명령어
insert 명령어를 통해서 데이터를 추가 시 자동 숫자 증가(auto_increment) 속성이 들어가는 필드는 빼고 값을 넣아야함
NN(NotNull) 조건을 건 필드는 무조건 다 넣어야함

테이블 삭제 명령어 - drop table (테이블명)

Auto_increment
- auto_increment 속성은 테이블의 하나의 필드에만 지정할 수 있음
- 그리고 반드시 프라이머리 Key 이어야함
- auto_increment 속성은 MySQL 에만 존재함
* MSSQL 은 일련번호 , Oracle 은 시퀀스

외래키 삭제
alter table (참조 받고 있는 테이블명)
drop foregin key (외래키명)

예:))
alter table tb_guestbook
drop foregin key fk_guestbook_member;

왜래키 생성
alter table (참조 시킬 테이블명)
add constraint (외래키명)
foreign key (참조 시킬 테이블명의 필드)
references (참조 받을 테이블명)(참조 받을 테이블명의 필드명)

예:))
alter table tb_guestbook
add constraint fk_guestbook_member
foreign key (writer)
references tb_member(member_id);