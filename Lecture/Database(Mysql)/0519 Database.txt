5월 19일 데이터베이스 강의

제약 조건
[1] PrimaryKey
- 중복 불가 및 Null 값을 가지지 않는 필드만 PrimaryKey 로 지정이 가능함
- 삭제나 추가는 가능하지만 수정은 불가함
* 예전에는 회원 아이디를 PrimaryKey 로 주로 지정했었음 / 아이디가 변경이 가능한 사이트들은 별도의 일련번호를 부여하여 PrimaryKey 로 지정
* 그리고 회원 아이디는 UniqueKey(중복은 허용하지 않지만 Null 값은 허용) 로 지정함
* 기본 테이블에 PrimaryKey 는 하나만 줄 수 있음(여러 개의 필드를 묶어서 하나의 PrimaryKey 로 지정할 수 있음)

[2] ForeignKey (외래키)
- 테이블과 테이블의 관계성에 입각해서 상호 제약을 가하고자 할 때 사용
- 테이블을 나누는 구조(정규화)
- 실무에서 바라볼 때 1 : N 의 관계일 때 테이블을 나눔
* 예:)) 고용인 , 부서 테이블이 있을 때 각 직원마다 부서명을 따로 저장하게 되면 메모리를 너무 많이 차지하게 됨
        또한 부서명을 바꿀 때마다 직원마다 부서명을 바꾸어야 함(이러한 것을 쓸데없는 일 = 오버헤드 라고 함)
        실수로 한명 빼고 바꾸면 '한 명은 홍보부 -> 나머지는 마케팅부' 같은 일이 발생할 수 있음(일관성이 없어짐)
        따라서 테이블을 나누어 관리하면 메모리 부족이 해결되고 오버헤드가 사라짐
        History 테이블을 만들어 관리
        예:)) 대학 등에서 졸업 후 학과명 등이 바뀌었을 때 졸업생이 졸업 증명서를 발급받아도 이전 학과명이 나와야하는 등이 필요할 때
        예:)) 개발 중 데이터베이스를 실수로 삭제하는 등의 일이 발생할 때