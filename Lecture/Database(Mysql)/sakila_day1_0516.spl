use sakila;

/*
[기초 조회]
1. 모든 배우(Actor)의 이름과 성을 조회하시오.
2. 배우 테이블에서 성(last_name)이 ‘DAVIS’인 사람을 모두 찾으시오.
3. 고객(Customer)의 이메일 목록을 알파벳 순서로 조회하시오.
4. 영화(film)의 제목과 대여 요금(rental_rate)을 조회하시오.
5. 고객(Customer)의 이름, 성, 이메일을 각각 출력하시오.
6. 카테고리(category)별 이름과 ID를 출력하시오.

[조건과 정렬]
7. 길이가 180분 이상인 영화 제목을 조회하시오.
8. ‘Comedy’ 카테고리에 속한 영화 제목을 모두 조회하시오.
9. 대여 요금이 4.99 이상인 영화 중에서 제목(title)과 요금(rental_rate)을 내림차순 정렬하시오.
10. 대여(rental) 중 2005년에 이루어진 기록만 조회하시오.
11. 고객 중 이름이 'S'로 시작하는 고객의 이름을 조회하시오.
12. 배우(actor) 테이블에서 이름이 5글자인 배우만 찾으시오.
*/

show tables;

# 1. 모든 배우(Actor)의 이름과 성을 조회하시오.
select first_name , last_name
from actor;

# 2. 배우 테이블에서 성(last_name)이 ‘DAVIS’인 사람을 모두 찾으시오.
select *
from actor
where last_name = "davis";

# 3. 고객(Customer)의 이메일 목록을 알파벳 순서로 조회하시오.
select email
from customer
order by email;

# 4. 영화(film)의 제목과 대여 요금(rental_rate)을 조회하시오.
select title , rental_rate
from film;

# 5. 고객(Customer)의 이름, 성, 이메일을 각각 출력하시오.
select first_name , last_name , email
from customer;

# 6. 카테고리(category)별 이름과 ID를 출력하시오.
select name , category_id
from category;

# 7. 길이가 180분 이상인 영화 제목을 조회하시오.
select title
from film
where length > 180;

# 8. ‘Comedy’ 카테고리에 속한 영화 제목을 모두 조회하시오.
select title
from film
join film_category on film.film_id = film_category.film_id
join category on film_category.category_id = category.category_id
where category.name = "comedy";

# 9. 대여 요금이 4.99 이상인 영화 중에서 제목(title)과 요금(rental_rate)을 내림차순 정렬하시오.
select title , rental_rate
from film
where rental_rate >= 4.99;

# 10. 대여(rental) 중 2005년에 이루어진 기록만 조회하시오.
select *
from rental
where rental_date > "2005-01-01" and rental_date < "2005_12_31";

# 11. 고객 중 이름이 'S'로 시작하는 고객의 이름을 조회하시오.
select first_name
from customer
where first_name like "s%";

# 12. 배우(actor) 테이블에서 이름이 5글자인 배우만 찾으시오.
select first_name
from actor
where length(first_name) = 5;